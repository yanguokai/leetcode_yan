class Solution:
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        #两个已经排序的数组
        #统一两个数组为一个排序的数组？？？然后再直接求中位数
        nums = nums1 + nums2
        sort_nums = sorted(nums)
        if len(sort_nums)%2!=0:
            return sort_nums[int(len(sort_nums) /2)]
        else:
            return (sort_nums[int((len(sort_nums)+1) /2)] + sort_nums[int((len(sort_nums)+1) /2 -1)])/2
        # Line 13: TypeError: list indices must be integers or slices, not float
        #A1,z1,A2  B1,z2,B2 对每个数组都先求中位数，然后拆分的数组
